<?php

function mm_quiz_block_info() {

  // This is the quiz block
  $blocks['quiz_form'] = array(
    'info' => t('Quiz Form'),
  );

  return $blocks;
}

function mm_quiz_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
    case 'quiz_form':

      // Add required 'node' file from node module.
      module_load_include('inc', 'node', 'node.pages');

      // Define our content type
      $type = 'candidate';

      // Create a node object... notice the type casting using (object)
      $node = (object) array(
        'type' => $type,
        'language' => LANGUAGE_NONE,
      );

      // Get the form from drupal using drupal_get_form
      // NOTE: for node forms we need to send a node object
      $form = drupal_get_form($type . '_node_form', $node);

      // Define our subject
      $block['subject'] = t("Mayor Me");

      // Define what the content of our block will be
      $block['content']['asdf'] = $form;
      break;
  }
  return $block;
}

function mm_quiz_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'candidate_node_form' && !user_is_logged_in()) {
    // Hide all fields except the questions.
    $fields_to_hide = array(
      'title',
      'body',
      'field_link',
      'field_picture',
    );
    foreach ($fields_to_hide as $field) {
      $form[$field]['#access'] = FALSE;
    }
    $form['title']['#value'] = 'User form';

    // Add our validation callback.
    $form['#validate'][] = 'mm_quiz_validate_answers';
  }
}

function mm_quiz_validate_answers($form, &$form_state) {
  // This should be preventing a "save".
  $form_state['rebuild'] = TRUE;

  // Get user's values
  $user_answers = array();

    for ($i = 1; $i <= 3; $i++) {
      $answer = $form_state['values']["field_question_" . $i]['und'][0]['value']; 

      array_push($user_answers, $answer);
    }
  dsm('user_answers');
  dsm($user_answers);  
  
  // to view all form values
  //dsm($form_state['values']);

  // Get all candidates
  // Use EntityFieldQuery... google it for other examples.
  $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', 'candidate');
  //->propertyCondition('status', 1);
     //->entityCondition('candidate', 'node');
  //->fieldOrderBy('field_awesome_factor', 'value', 'DESC')

  $result = $query->execute();
  // dsm('result');
  // dsm($result);

  $nodes = node_load_multiple(array_keys($result['node']));
  dsm('nodes');
  dsm($nodes);

  //drilled down into node_1 (candidate(1), answer to question 1
  // $candidate_answer_1_1 = $nodes[1]->{'field_question_1'}['und'][0]['value'];

  // $candidate_answer_1_2 = $nodes[1]->{'field_question_2'}['und'][0]['value'];

  // $candidate_answer_1_3 = $nodes[1]->{'field_question_3'}['und'][0]['value'];

    //$i is candidate number
    //$j is question number
// THIS IS A TEMPLATE FOR LOOP FOR REFERENCE 
   // for ($i = 1; $i <= 3; $i++) {

   //      $candidate_answers = array();
   //    for ($j = 1; $j <= 3; $j++) {
   //      $candidate_answers[] = $nodes[$i]->{"field_question_" . $j}['und'][0]['value'];
   //    };
   //      $all_candidates_answers[] = $candidate_answers;
   //  }


    $all_candidates_answers = array();
    for ($i = 1; $i <= 3; $i++) {    

        $candidate_answers = array();
      for ($j = 1; $j <= 3; $j++) {
        $candidate_answers[] = $nodes[$i]->{"field_question_" . $j}['und'][0]['value'];
      };
        $all_candidates_answers[] = $candidate_answers;
    }
 
  dsm('all_candidates_answers');
  dsm($all_candidates_answers);


//   if (($user_answers[0]) == (all_candidates_answers[0][0])){
//   dsm('true')
// } else{
//   dsm('false')
// }

//$candidate_answer = 'b';

//$i is candidate ref
for ($i=1; $i <=3; $i++) { 
      $candidate_name = $nodes[$i]->{"title"};
      $candidate_photo = $nodes[$i]->field_picture['und'][0]['uri'];

$score = 0;
 //$j is question index
  for ($j=0; $j <=2; $j++) { 
    
    //Find every $j where $j represents the candidates's answer and put it in a variable of $candidate-answer

    //$i - 1 because node numbers are one higher than array numbers
    $candidate_answer = $all_candidates_answers[($i - 1)][$j];

    ////Find every $j where $j represents the user's answer and put it in a variable of $user-answer
    $user_answer = $user_answers[$j];

    //Set a variable of $score that we will add results into
    

    //Conditional statement comparing candiddate and user answers. 
    if ($candidate_answer == $user_answer) {
    $score++;

    }

  } 
   //NOTE!!! We must change 3 to a variable independent of how many questions there are
    $percent = $score / 3 * 100;
    dsm($candidate_name);
    dsm($candidate_photo);
    dsm("score");
    dsm($percent . "%");  
  //
}


//$user_answers[0] == all_candidates_answers[0][0]

  // Compare against each candidate & build results.
  // dsm($user_answers[0]);

  //pseudo code
  // goals:
  // compare results to one candidate
  // calculate a 'score'

  // scoring mvp
  //   score = 0

  //     for each (step 2)

  // if ["user_q" . $i][answer] == ["candidate_" . $i][answer]
  //   score++
  // end

  //   percentage = score / num_of_questions



  // Then you'll be able to compare the user's answers with these
  // answers.


  // As you go through, I'd recommend adding each result to an array.
  // After all the results are done and the array is built... call me.
}
