<?php

function mm_quiz_block_info() {

  // This is the quiz block
  $blocks['quiz_form'] = array(
    'info' => t('Quiz Form'),
    );

  return $blocks;
}

function mm_quiz_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
    case 'quiz_form':

      // Add required 'node' file from node module.
    module_load_include('inc', 'node', 'node.pages');

      // Define our content type
    $type = 'candidate';

      // Create a node object... notice the type casting using (object)
    $node = (object) array(
      'type' => $type,
      'language' => LANGUAGE_NONE,
      );

      // Get the form from drupal using drupal_get_form
      // NOTE: for node forms we need to send a node object
    $form = drupal_get_form($type . '_node_form', $node);

      // Define our subject
    $block['subject'] = t("Mayor Me");

      // Define what the content of our block will be
    $block['content']['asdf'] = $form;
    break;
  }
  return $block;
}

function mm_quiz_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'candidate_node_form' && !user_is_logged_in()) {
    // Hide all fields except the questions.
    $fields_to_hide = array(
      'title',
      'body',
      'field_link',
      'field_picture',
      );
    foreach ($fields_to_hide as $field) {
      $form[$field]['#access'] = FALSE;
    }
    $form['title']['#value'] = 'User form';

    // Add our validation callback.
    $form['#validate'][] = 'mm_quiz_validate_answers';

    // Check form state for candidate results.
    // Display results.
    $form['results'] = array(
      '#markup' => '<h1>This is my thing!</h1>',
    );
  }
}

function mm_quiz_validate_answers($form, &$form_state) {
  // This should be preventing a "save".
  $form_state['rebuild'] = TRUE;

  // Get number of Qs.
  $num_qs = mm_quiz_get_num_qs();
  // set number of questions in candidate survey.

  // Get user's answers.
  $user_answers = mm_quiz_get_user_answers($form_state, $num_qs);

  // Get all candidates Information
  $all_candidates_info = mm_quiz_get_all_candidates_info();


  // Get all candidates answers
  $all_candidates_answers = mm_quiz_get_all_candidates_answers($all_candidates_info, $num_qs);

  // Compare answers.
  // Sort answers.
  // Set results to form_state array.
  // Display results.
  
        //$i selects candidate


    //$i is candidate ref
  for ($i=1; $i <=3; $i++) { 
    $candidate_name = $all_candidates_info[$i]->{"title"};
    $candidate_photo = $all_candidates_info[$i]->field_picture['und'][0]['uri'];
    //sets score for given candidate    
    $score = 0;
    //$ j - 1 is question index [array]
    for ($j=0; $j <= ($num_qs - 1); $j++) { 

      //$i - 1 [array]
      $candidate_answer = $all_candidates_answers[($i - 1)][$j];

      //$j represents the user answer's array and put it in a variable of $user_answers
      $user_answer = $user_answers[$j];

      if ($candidate_answer == $user_answer) { 
        $score++; 
      }
    }

    dsm('score');  
    dsm($score);
        //displays score for current candidate to screen
    echo('<h2 class="mm_name">' .$candidate_name. '</h2>');
           // $url_image = url(drupal_realpath($candidate_photo));

    echo('<img src="'. drupal_realpath($candidate_photo) . '"> alt="candidate photo"');

    $percent = round($score / $num_qs * 100);
    echo('<h3 class = "mm_score">' . $percent . ' %</h3>');
  }
}

function mm_quiz_get_num_qs() {
  return 4;
}

function mm_quiz_get_user_answers($form_state, $num_qs) {
  $user_answers = array();

  for ($i = 1; $i <= $num_qs; $i++) {
    $answer = $form_state['values']["field_question_" . $i]['und'][0]['value']; 

    array_push($user_answers, $answer);
  } 

  return $user_answers;

  // dsm('user_answers');
  // dsm($user_answers); 
}

function mm_quiz_get_all_candidates_info(){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'candidate');

  $result = $query->execute();

  $all_candidates_info = node_load_multiple(array_keys($result['node']));

  // dsm ('all_candidates_info');
  // dsm ($all_candidates_info); 

  return $all_candidates_info;
}

function mm_quiz_get_all_candidates_answers($all_candidates_info, $num_qs){ 
  dsm ('all_candidates_info_ans_func');
  dsm ($all_candidates_info); 

  // $i selects candidate
  $all_candidates_answers = array();
  for ($i = 1; $i <= 3; $i++) {    
    // $j selects questions #
    $candidate_answers = array();
    for ($j = 1; $j <= $num_qs; $j++) {
      $candidate_answers[] = $all_candidates_info[$i]->{"field_question_" . $j}['und'][0]['value'];
    };
    $all_candidates_answers[] = $candidate_answers;
  } 
  // dsm ('all_candidates_answers');
  // dsm ($all_candidates_answers); 

  return $all_candidates_answers;
}
